
CREATE TABLE products (product_id INTEGER, product_type_id INTEGER, name VARCHAR2(30) NOT NULL, description VARCHAR2(50), price NUMBER(5, 2));

DESC products 

SELECT * FROM products


-- insert sample data into products table

INSERT INTO products (product_id, product_type_id, name, description, price) VALUES (1, 1, 'Modern Science', 'A description of modern science', 19.95);
INSERT INTO products (product_id, product_type_id, name, description, price) VALUES (2, 1, 'Chemistry', 'Introduction to Chemistry', 30.00);
INSERT INTO products (product_id, product_type_id, name, description, price) VALUES (3, 2, 'Supernova', 'A star explodes', 25.99);
INSERT INTO products (product_id, product_type_id, name, description, price) VALUES (4, 2, 'Tank War', 'Action movie about a future war', 13.95);
INSERT INTO products (product_id, product_type_id, name, description, price) VALUES (5, 2, 'Z Files', 'Series on mysterious activities', 49.99);
INSERT INTO products (product_id, product_type_id, name, description, price) VALUES (6, 2, '2412: The Return', 'Aliens return', 14.95);
INSERT INTO products (product_id, product_type_id, name, description, price) VALUES (7, 3, 'Space Force 9', 'Adventures of heroes', 13.49);
INSERT INTO products (product_id, product_type_id, name, description, price) VALUES (8, 3, 'From Another Planet', 'Alien from another planet lands on Earth', 12.99);
INSERT INTO products (product_id, product_type_id, name, description, price) VALUES (9, 4, 'Classical Music', 'The best classical music', 10.99);
INSERT INTO products (product_id, product_type_id, name, description, price) VALUES (10, 4, 'Pop 3', 'The best popular music', 15.99);
INSERT INTO products (product_id, product_type_id, name, description, price) VALUES (11, 4, 'Creative Yell', 'Debut album', 14.99);
INSERT INTO products (product_id, product_type_id, name, description, price) VALUES (12, NULL, 'My Front Line', 'Their greatest hits', 13.49);



-- AVG Func.
SELECT AVG(price) FROM products;
SELECT AVG(price + 2) FROM products;
SELECT AVG(DISTINCT price) FROM products;


-- COUNT Func.
SELECT COUNT(product_id) FROM products;
SELECT COUNT(ROWID) FROM products;


-- MAX & MIN Func.
SELECT MAX(price), MIN(price) FROM products;
SELECT MAX(name), MIN(name) FROM products;


-- SUM Func.
SELECT SUM(price) FROM products;
SELECT SUM(DISTINCT price) FROM products;



-- Example 1
SELECT product_type_id, AVG(price) FROM products;


-- Example 2
SELECT product_type_id, AVG(price) 
FROM products 
WHERE AVG(price) > 20 
GROUP BY product_type_id;

-- Example 3
SELECT product_type_id, AVG(price)
FROM products
GROUP BY product_type_id
HAVING AVG(price) > 20;

